-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_hls_sobel_hls_Pipeline_VITIS_LOOP_40_3_VITIS_LOOP_41_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    frame_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_ce0 : OUT STD_LOGIC;
    frame_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_1_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_1_ce0 : OUT STD_LOGIC;
    frame_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_2_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_2_ce0 : OUT STD_LOGIC;
    frame_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_3_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_3_ce0 : OUT STD_LOGIC;
    frame_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_4_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_4_ce0 : OUT STD_LOGIC;
    frame_4_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_5_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_5_ce0 : OUT STD_LOGIC;
    frame_5_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_6_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_6_ce0 : OUT STD_LOGIC;
    frame_6_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_7_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_7_ce0 : OUT STD_LOGIC;
    frame_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    frame_8_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    frame_8_ce0 : OUT STD_LOGIC;
    frame_8_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of sobel_hls_sobel_hls_Pipeline_VITIS_LOOP_40_3_VITIS_LOOP_41_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_900 : STD_LOGIC_VECTOR (11 downto 0) := "100100000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv6_31 : STD_LOGIC_VECTOR (5 downto 0) := "110001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv13_56 : STD_LOGIC_VECTOR (12 downto 0) := "0000001010110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv12_32 : STD_LOGIC_VECTOR (11 downto 0) := "000000110010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln40_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln40_fu_955_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_reg_1802_pp0_iter10_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_fu_983_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln40_2_reg_1810_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_fu_997_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter5_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter6_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter7_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter8_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln41_reg_1818_pp0_iter9_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_42_reg_1823 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter4_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter5_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter6_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter7_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter8_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_reg_1823_pp0_iter9_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln40_fu_1047_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln40_reg_1834 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln40_reg_1834_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln41_fu_1051_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln41_reg_1846 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln41_reg_1846_pp0_iter10_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_45_reg_2224 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln51_fu_1747_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln51_reg_2229 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln45_5_fu_1169_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln45_10_fu_1212_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_11_fu_1231_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_14_fu_1273_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_15_fu_1292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_17_fu_1327_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_18_fu_1346_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln45_19_fu_1365_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_2_fu_1751_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_96 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_load : STD_LOGIC_VECTOR (5 downto 0);
    signal y_fu_100 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal ap_sig_allocacmp_y_load : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten6_fu_104 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    signal add_ln40_fu_937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_allocacmp_indvar_flatten6_load : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_742_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_761_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_780_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_799_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_818_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_837_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_856_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_875_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_894_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln41_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln40_2_fu_963_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln4042_fu_969_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_991_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_991_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_1003_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln40_1_fu_975_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln42_fu_1013_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln42_fu_1013_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln42_fu_1013_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_991_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1003_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln40_fu_1058_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln40_fu_1058_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln40_fu_1058_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_32_fu_1064_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_33_fu_1078_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln45_fu_1074_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln41_fu_1100_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln41_fu_1100_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln41_fu_1100_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_34_fu_1106_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln40_1_fu_1092_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln45_fu_1129_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln45_fu_1129_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln45_fu_1129_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_35_fu_1135_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_36_fu_1149_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln45_4_fu_1145_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_2_fu_1157_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln41_1_fu_1116_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_3_fu_1163_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln41_1_fu_1120_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln45_1_fu_1186_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln45_1_fu_1186_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln45_1_fu_1186_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_37_fu_1192_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln45_9_fu_1202_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_4_fu_1206_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_1_fu_1086_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_5_fu_1225_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln45_2_fu_1247_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln45_2_fu_1247_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln45_2_fu_1247_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_38_fu_1253_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln45_13_fu_1263_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_6_fu_1267_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_7_fu_1286_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_39_fu_1308_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln45_16_fu_1305_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_8_fu_1315_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_9_fu_1321_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_10_fu_1340_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln45_11_fu_1359_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_742_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_761_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_780_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_1381_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_1381_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_799_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_818_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_837_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1404_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_1404_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_856_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_875_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_894_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1427_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1427_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1450_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_1450_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1473_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_1473_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_1496_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_23_fu_1496_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln42_fu_1492_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln45_8_fu_1469_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp2_fu_1523_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_40_fu_1529_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln45_6_fu_1446_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln45_2_fu_1400_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln45_fu_1541_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_27_fu_1551_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_1551_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_cast_fu_1570_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln45_3_fu_1423_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_1574_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_41_fu_1580_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln46_fu_1592_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_23_cast_fu_1519_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln46_fu_1598_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln46_fu_1602_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_31_fu_1612_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_1612_p9 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln42_fu_1547_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln45_fu_1537_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln45_fu_1635_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_23_cast6_fu_1515_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal px_2_fu_1641_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln45_20_fu_1631_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal px_fu_1647_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln46_fu_1588_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln46_1_fu_1657_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln45_1_fu_1608_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal py_fu_1663_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln46_1_fu_1653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_1673_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln49_fu_1681_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln49_fu_1687_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln42_1_fu_1669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_1699_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln49_1_fu_1707_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln49_1_fu_1713_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln49_fu_1695_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln49_1_fu_1721_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal magnitude_fu_1731_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln49_fu_1725_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1768_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln51_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1768_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1768_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_1768_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter11_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal grp_fu_1768_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1768_p20 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln40_fu_1058_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln41_fu_1100_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln42_fu_1013_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln45_1_fu_1186_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln45_2_fu_1247_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln45_fu_1129_p00 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_742_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_742_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_742_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_761_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_761_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_761_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_780_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_780_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_780_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_799_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_799_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_799_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_818_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_818_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_818_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_837_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_837_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_837_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_856_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_856_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_856_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_875_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_875_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_875_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_894_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_894_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_894_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1381_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1381_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_4_fu_1381_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_1404_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_1404_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_8_fu_1404_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_1427_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_1427_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_11_fu_1427_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1450_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1450_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_15_fu_1450_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_1473_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_1473_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_19_fu_1473_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_1496_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_1496_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_1496_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_1551_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_1551_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_1551_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_1612_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_1612_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_31_fu_1612_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component sobel_hls_sparsemux_7_2_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        def : IN STD_LOGIC_VECTOR (7 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_hls_urem_6ns_3ns_2_10_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component sobel_hls_mul_6ns_8ns_13_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component sobel_hls_mac_muladd_6ns_6ns_6ns_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component sobel_hls_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_7_2_8_1_1_U21 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_q0,
        din1 => frame_1_q0,
        din2 => frame_2_q0,
        def => grp_fu_742_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_742_p9);

    sparsemux_7_2_8_1_1_U22 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_3_q0,
        din1 => frame_4_q0,
        din2 => frame_5_q0,
        def => grp_fu_761_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_761_p9);

    sparsemux_7_2_8_1_1_U23 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_6_q0,
        din1 => frame_7_q0,
        din2 => frame_8_q0,
        def => grp_fu_780_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_780_p9);

    sparsemux_7_2_8_1_1_U24 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_q0,
        din1 => frame_1_q0,
        din2 => frame_2_q0,
        def => grp_fu_799_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_799_p9);

    sparsemux_7_2_8_1_1_U25 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_3_q0,
        din1 => frame_4_q0,
        din2 => frame_5_q0,
        def => grp_fu_818_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_818_p9);

    sparsemux_7_2_8_1_1_U26 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_6_q0,
        din1 => frame_7_q0,
        din2 => frame_8_q0,
        def => grp_fu_837_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_837_p9);

    sparsemux_7_2_8_1_1_U27 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_q0,
        din1 => frame_1_q0,
        din2 => frame_2_q0,
        def => grp_fu_856_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_856_p9);

    sparsemux_7_2_8_1_1_U28 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_3_q0,
        din1 => frame_4_q0,
        din2 => frame_5_q0,
        def => grp_fu_875_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_875_p9);

    sparsemux_7_2_8_1_1_U29 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => frame_6_q0,
        din1 => frame_7_q0,
        din2 => frame_8_q0,
        def => grp_fu_894_p7,
        sel => trunc_ln41_reg_1846_pp0_iter10_reg,
        dout => grp_fu_894_p9);

    urem_6ns_3ns_2_10_1_U30 : component sobel_hls_urem_6ns_3ns_2_10_1
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 6,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_991_p0,
        din1 => grp_fu_991_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_991_p2);

    urem_6ns_3ns_2_10_1_U31 : component sobel_hls_urem_6ns_3ns_2_10_1
    generic map (
        ID => 1,
        NUM_STAGE => 10,
        din0_WIDTH => 6,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => select_ln40_fu_955_p3,
        din1 => grp_fu_1003_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1003_p2);

    mul_6ns_8ns_13_1_1_U32 : component sobel_hls_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln42_fu_1013_p0,
        din1 => mul_ln42_fu_1013_p1,
        dout => mul_ln42_fu_1013_p2);

    mul_6ns_8ns_13_1_1_U33 : component sobel_hls_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln40_fu_1058_p0,
        din1 => mul_ln40_fu_1058_p1,
        dout => mul_ln40_fu_1058_p2);

    mul_6ns_8ns_13_1_1_U34 : component sobel_hls_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln41_fu_1100_p0,
        din1 => mul_ln41_fu_1100_p1,
        dout => mul_ln41_fu_1100_p2);

    mul_6ns_8ns_13_1_1_U35 : component sobel_hls_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln45_fu_1129_p0,
        din1 => mul_ln45_fu_1129_p1,
        dout => mul_ln45_fu_1129_p2);

    mul_6ns_8ns_13_1_1_U36 : component sobel_hls_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln45_1_fu_1186_p0,
        din1 => mul_ln45_1_fu_1186_p1,
        dout => mul_ln45_1_fu_1186_p2);

    mul_6ns_8ns_13_1_1_U37 : component sobel_hls_mul_6ns_8ns_13_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 6,
        din1_WIDTH => 8,
        dout_WIDTH => 13)
    port map (
        din0 => mul_ln45_2_fu_1247_p0,
        din1 => mul_ln45_2_fu_1247_p1,
        dout => mul_ln45_2_fu_1247_p2);

    sparsemux_7_2_8_1_1_U38 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_742_p9,
        din1 => grp_fu_761_p9,
        din2 => grp_fu_780_p9,
        def => tmp_4_fu_1381_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_4_fu_1381_p9);

    sparsemux_7_2_8_1_1_U39 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_799_p9,
        din1 => grp_fu_818_p9,
        din2 => grp_fu_837_p9,
        def => tmp_8_fu_1404_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_8_fu_1404_p9);

    sparsemux_7_2_8_1_1_U40 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 8,
        CASE1 => "10",
        din1_WIDTH => 8,
        CASE2 => "00",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_856_p9,
        din1 => grp_fu_875_p9,
        din2 => grp_fu_894_p9,
        def => tmp_11_fu_1427_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_11_fu_1427_p9);

    sparsemux_7_2_8_1_1_U41 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_742_p9,
        din1 => grp_fu_761_p9,
        din2 => grp_fu_780_p9,
        def => tmp_15_fu_1450_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_15_fu_1450_p9);

    sparsemux_7_2_8_1_1_U42 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "00",
        din0_WIDTH => 8,
        CASE1 => "01",
        din1_WIDTH => 8,
        CASE2 => "10",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_856_p9,
        din1 => grp_fu_875_p9,
        din2 => grp_fu_894_p9,
        def => tmp_19_fu_1473_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_19_fu_1473_p9);

    sparsemux_7_2_8_1_1_U43 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_742_p9,
        din1 => grp_fu_761_p9,
        din2 => grp_fu_780_p9,
        def => tmp_23_fu_1496_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_23_fu_1496_p9);

    sparsemux_7_2_8_1_1_U44 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_799_p9,
        din1 => grp_fu_818_p9,
        din2 => grp_fu_837_p9,
        def => tmp_27_fu_1551_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_27_fu_1551_p9);

    sparsemux_7_2_8_1_1_U45 : component sobel_hls_sparsemux_7_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 8,
        CASE1 => "00",
        din1_WIDTH => 8,
        CASE2 => "01",
        din2_WIDTH => 8,
        def_WIDTH => 8,
        sel_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => grp_fu_856_p9,
        din1 => grp_fu_875_p9,
        din2 => grp_fu_894_p9,
        def => tmp_31_fu_1612_p7,
        sel => trunc_ln40_reg_1834_pp0_iter10_reg,
        dout => tmp_31_fu_1612_p9);

    mac_muladd_6ns_6ns_6ns_12_4_1_U46 : component sobel_hls_mac_muladd_6ns_6ns_6ns_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 6,
        din1_WIDTH => 6,
        din2_WIDTH => 6,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1768_p0,
        din1 => grp_fu_1768_p1,
        din2 => grp_fu_1768_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1768_p3);

    flow_control_loop_pipe_sequential_init_U : component sobel_hls_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten6_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln40_fu_931_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten6_fu_104 <= add_ln40_fu_937_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten6_fu_104 <= ap_const_lv12_0;
                end if;
            end if; 
        end if;
    end process;

    x_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln40_fu_931_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    x_fu_96 <= add_ln41_fu_997_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_96 <= ap_const_lv6_1;
                end if;
            end if; 
        end if;
    end process;

    y_fu_100_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln40_fu_931_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    y_fu_100 <= select_ln40_2_fu_983_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    y_fu_100 <= ap_const_lv6_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln41_reg_1818 <= add_ln41_fu_997_p2;
                add_ln41_reg_1818_pp0_iter1_reg <= add_ln41_reg_1818;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                select_ln40_2_reg_1810 <= select_ln40_2_fu_983_p3;
                select_ln40_2_reg_1810_pp0_iter1_reg <= select_ln40_2_reg_1810;
                select_ln40_reg_1802 <= select_ln40_fu_955_p3;
                select_ln40_reg_1802_pp0_iter1_reg <= select_ln40_reg_1802;
                tmp_42_reg_1823 <= mul_ln42_fu_1013_p2(12 downto 8);
                tmp_42_reg_1823_pp0_iter1_reg <= tmp_42_reg_1823;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln41_reg_1818_pp0_iter2_reg <= add_ln41_reg_1818_pp0_iter1_reg;
                add_ln41_reg_1818_pp0_iter3_reg <= add_ln41_reg_1818_pp0_iter2_reg;
                add_ln41_reg_1818_pp0_iter4_reg <= add_ln41_reg_1818_pp0_iter3_reg;
                add_ln41_reg_1818_pp0_iter5_reg <= add_ln41_reg_1818_pp0_iter4_reg;
                add_ln41_reg_1818_pp0_iter6_reg <= add_ln41_reg_1818_pp0_iter5_reg;
                add_ln41_reg_1818_pp0_iter7_reg <= add_ln41_reg_1818_pp0_iter6_reg;
                add_ln41_reg_1818_pp0_iter8_reg <= add_ln41_reg_1818_pp0_iter7_reg;
                add_ln41_reg_1818_pp0_iter9_reg <= add_ln41_reg_1818_pp0_iter8_reg;
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
                ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
                select_ln40_2_reg_1810_pp0_iter2_reg <= select_ln40_2_reg_1810_pp0_iter1_reg;
                select_ln40_2_reg_1810_pp0_iter3_reg <= select_ln40_2_reg_1810_pp0_iter2_reg;
                select_ln40_2_reg_1810_pp0_iter4_reg <= select_ln40_2_reg_1810_pp0_iter3_reg;
                select_ln40_2_reg_1810_pp0_iter5_reg <= select_ln40_2_reg_1810_pp0_iter4_reg;
                select_ln40_2_reg_1810_pp0_iter6_reg <= select_ln40_2_reg_1810_pp0_iter5_reg;
                select_ln40_2_reg_1810_pp0_iter7_reg <= select_ln40_2_reg_1810_pp0_iter6_reg;
                select_ln40_2_reg_1810_pp0_iter8_reg <= select_ln40_2_reg_1810_pp0_iter7_reg;
                select_ln40_2_reg_1810_pp0_iter9_reg <= select_ln40_2_reg_1810_pp0_iter8_reg;
                select_ln40_reg_1802_pp0_iter10_reg <= select_ln40_reg_1802_pp0_iter9_reg;
                select_ln40_reg_1802_pp0_iter2_reg <= select_ln40_reg_1802_pp0_iter1_reg;
                select_ln40_reg_1802_pp0_iter3_reg <= select_ln40_reg_1802_pp0_iter2_reg;
                select_ln40_reg_1802_pp0_iter4_reg <= select_ln40_reg_1802_pp0_iter3_reg;
                select_ln40_reg_1802_pp0_iter5_reg <= select_ln40_reg_1802_pp0_iter4_reg;
                select_ln40_reg_1802_pp0_iter6_reg <= select_ln40_reg_1802_pp0_iter5_reg;
                select_ln40_reg_1802_pp0_iter7_reg <= select_ln40_reg_1802_pp0_iter6_reg;
                select_ln40_reg_1802_pp0_iter8_reg <= select_ln40_reg_1802_pp0_iter7_reg;
                select_ln40_reg_1802_pp0_iter9_reg <= select_ln40_reg_1802_pp0_iter8_reg;
                tmp_42_reg_1823_pp0_iter2_reg <= tmp_42_reg_1823_pp0_iter1_reg;
                tmp_42_reg_1823_pp0_iter3_reg <= tmp_42_reg_1823_pp0_iter2_reg;
                tmp_42_reg_1823_pp0_iter4_reg <= tmp_42_reg_1823_pp0_iter3_reg;
                tmp_42_reg_1823_pp0_iter5_reg <= tmp_42_reg_1823_pp0_iter4_reg;
                tmp_42_reg_1823_pp0_iter6_reg <= tmp_42_reg_1823_pp0_iter5_reg;
                tmp_42_reg_1823_pp0_iter7_reg <= tmp_42_reg_1823_pp0_iter6_reg;
                tmp_42_reg_1823_pp0_iter8_reg <= tmp_42_reg_1823_pp0_iter7_reg;
                tmp_42_reg_1823_pp0_iter9_reg <= tmp_42_reg_1823_pp0_iter8_reg;
                tmp_45_reg_2224 <= magnitude_fu_1731_p2(11 downto 8);
                trunc_ln40_reg_1834 <= trunc_ln40_fu_1047_p1;
                trunc_ln40_reg_1834_pp0_iter10_reg <= trunc_ln40_reg_1834;
                trunc_ln41_reg_1846 <= trunc_ln41_fu_1051_p1;
                trunc_ln41_reg_1846_pp0_iter10_reg <= trunc_ln41_reg_1846;
                trunc_ln51_reg_2229 <= trunc_ln51_fu_1747_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln4042_fu_969_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_y_load) + unsigned(ap_const_lv6_1));
    add_ln40_1_fu_1092_p2 <= std_logic_vector(unsigned(select_ln40_2_reg_1810_pp0_iter9_reg) + unsigned(ap_const_lv6_3F));
    add_ln40_2_fu_963_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_y_load) + unsigned(ap_const_lv6_2));
    add_ln40_fu_937_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten6_load) + unsigned(ap_const_lv12_1));
    add_ln41_1_fu_1120_p2 <= std_logic_vector(unsigned(select_ln40_reg_1802_pp0_iter9_reg) + unsigned(ap_const_lv6_3F));
    add_ln41_fu_997_p2 <= std_logic_vector(unsigned(select_ln40_fu_955_p3) + unsigned(ap_const_lv6_1));
    add_ln45_10_fu_1340_p2 <= std_logic_vector(unsigned(add_ln45_8_fu_1315_p2) + unsigned(zext_ln41_1_fu_1116_p1));
    add_ln45_11_fu_1359_p2 <= std_logic_vector(unsigned(add_ln45_8_fu_1315_p2) + unsigned(zext_ln45_13_fu_1263_p1));
    add_ln45_1_fu_1086_p2 <= std_logic_vector(unsigned(tmp_33_fu_1078_p3) + unsigned(zext_ln45_fu_1074_p1));
    add_ln45_2_fu_1157_p2 <= std_logic_vector(unsigned(tmp_36_fu_1149_p3) + unsigned(zext_ln45_4_fu_1145_p1));
    add_ln45_3_fu_1163_p2 <= std_logic_vector(unsigned(add_ln45_2_fu_1157_p2) + unsigned(zext_ln41_1_fu_1116_p1));
    add_ln45_4_fu_1206_p2 <= std_logic_vector(unsigned(add_ln45_2_fu_1157_p2) + unsigned(zext_ln45_9_fu_1202_p1));
    add_ln45_5_fu_1225_p2 <= std_logic_vector(unsigned(add_ln45_1_fu_1086_p2) + unsigned(zext_ln45_9_fu_1202_p1));
    add_ln45_6_fu_1267_p2 <= std_logic_vector(unsigned(add_ln45_2_fu_1157_p2) + unsigned(zext_ln45_13_fu_1263_p1));
    add_ln45_7_fu_1286_p2 <= std_logic_vector(unsigned(add_ln45_1_fu_1086_p2) + unsigned(zext_ln45_13_fu_1263_p1));
    add_ln45_8_fu_1315_p2 <= std_logic_vector(unsigned(tmp_39_fu_1308_p3) + unsigned(zext_ln45_16_fu_1305_p1));
    add_ln45_9_fu_1321_p2 <= std_logic_vector(unsigned(add_ln45_8_fu_1315_p2) + unsigned(zext_ln45_9_fu_1202_p1));
    add_ln45_fu_1635_p2 <= std_logic_vector(signed(sext_ln42_fu_1547_p1) + signed(sext_ln45_fu_1537_p1));
    add_ln46_1_fu_1657_p2 <= std_logic_vector(signed(sext_ln46_fu_1588_p1) + signed(zext_ln45_20_fu_1631_p1));
    add_ln46_fu_1592_p2 <= std_logic_vector(unsigned(zext_ln45_6_fu_1446_p1) + unsigned(zext_ln45_2_fu_1400_p1));
    add_ln49_fu_1725_p2 <= std_logic_vector(signed(select_ln49_fu_1687_p3) + signed(select_ln49_1_fu_1713_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln40_fu_931_p2)
    begin
        if (((icmp_ln40_fu_931_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter11_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter11_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12)
    begin
        if (((ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten6_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten6_fu_104)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten6_load <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_indvar_flatten6_load <= indvar_flatten6_fu_104;
        end if; 
    end process;


    ap_sig_allocacmp_x_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_96, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_load <= ap_const_lv6_1;
        else 
            ap_sig_allocacmp_x_load <= x_fu_96;
        end if; 
    end process;


    ap_sig_allocacmp_y_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, y_fu_100)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_y_load <= ap_const_lv6_1;
        else 
            ap_sig_allocacmp_y_load <= y_fu_100;
        end if; 
    end process;


    frame_1_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_1_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_1_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_1_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_1_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_1_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_1_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_1_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_1_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_1_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_1_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_1_ce0 <= ap_const_logic_1;
        else 
            frame_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_2_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_2_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_2_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_2_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_2_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_2_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_2_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_2_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_2_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_2_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_2_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_2_ce0 <= ap_const_logic_1;
        else 
            frame_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_3_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_3_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_3_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_3_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_3_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_3_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_3_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_3_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_3_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_3_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_3_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_3_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)))) then 
            frame_3_ce0 <= ap_const_logic_1;
        else 
            frame_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_4_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_4_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_4_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_4_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_4_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_4_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_4_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_4_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_4_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_4_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_4_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_4_ce0 <= ap_const_logic_1;
        else 
            frame_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_5_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_5_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_5_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_5_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_5_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_5_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_5_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_5_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_5_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_5_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_5_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_5_ce0 <= ap_const_logic_1;
        else 
            frame_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_6_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_6_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_6_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_6_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_6_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_6_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_6_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_6_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_6_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_6_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_6_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_6_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_6_ce0 <= ap_const_logic_1;
        else 
            frame_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_7_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_7_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_7_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_7_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_7_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_7_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_7_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_7_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_7_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_7_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_7_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_7_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_7_ce0 <= ap_const_logic_1;
        else 
            frame_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_8_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_8_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_8_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_8_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_8_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_8_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_8_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_8_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_8_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_8_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_8_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_8_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_8_ce0 <= ap_const_logic_1;
        else 
            frame_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    frame_address0_assign_proc : process(ap_enable_reg_pp0_iter10, trunc_ln40_reg_1834, trunc_ln41_reg_1846, zext_ln45_5_fu_1169_p1, ap_block_pp0_stage0, zext_ln45_10_fu_1212_p1, zext_ln45_11_fu_1231_p1, zext_ln45_14_fu_1273_p1, zext_ln45_15_fu_1292_p1, zext_ln45_17_fu_1327_p1, zext_ln45_18_fu_1346_p1, zext_ln45_19_fu_1365_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then
            if (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_address0 <= zext_ln45_19_fu_1365_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_address0 <= zext_ln45_18_fu_1346_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2))) then 
                frame_address0 <= zext_ln45_17_fu_1327_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_address0 <= zext_ln45_15_fu_1292_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0))) then 
                frame_address0 <= zext_ln45_11_fu_1231_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_address0 <= zext_ln45_14_fu_1273_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_address0 <= zext_ln45_5_fu_1169_p1(9 - 1 downto 0);
            elsif (((trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1))) then 
                frame_address0 <= zext_ln45_10_fu_1212_p1(9 - 1 downto 0);
            else 
                frame_address0 <= "XXXXXXXXX";
            end if;
        else 
            frame_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    frame_ce0_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, trunc_ln40_reg_1834, trunc_ln41_reg_1846)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_2) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 
    = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_1) and (trunc_ln40_reg_1834 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (trunc_ln41_reg_1846 = ap_const_lv2_0) and (trunc_ln40_reg_1834 = ap_const_lv2_1)))) then 
            frame_ce0 <= ap_const_logic_1;
        else 
            frame_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1003_p1 <= ap_const_lv6_3(3 - 1 downto 0);
    grp_fu_1768_p0 <= grp_fu_1768_p00(6 - 1 downto 0);
    grp_fu_1768_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_2_reg_1810_pp0_iter8_reg),12));
    grp_fu_1768_p1 <= ap_const_lv12_32(6 - 1 downto 0);
    grp_fu_1768_p2 <= grp_fu_1768_p20(6 - 1 downto 0);
    grp_fu_1768_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_reg_1802_pp0_iter10_reg),12));
    grp_fu_742_p7 <= "XXXXXXXX";
    grp_fu_761_p7 <= "XXXXXXXX";
    grp_fu_780_p7 <= "XXXXXXXX";
    grp_fu_799_p7 <= "XXXXXXXX";
    grp_fu_818_p7 <= "XXXXXXXX";
    grp_fu_837_p7 <= "XXXXXXXX";
    grp_fu_856_p7 <= "XXXXXXXX";
    grp_fu_875_p7 <= "XXXXXXXX";
    grp_fu_894_p7 <= "XXXXXXXX";
    grp_fu_991_p0 <= 
        add_ln4042_fu_969_p2 when (icmp_ln41_fu_949_p2(0) = '1') else 
        ap_sig_allocacmp_y_load;
    grp_fu_991_p1 <= ap_const_lv6_3(3 - 1 downto 0);
    icmp_ln40_fu_931_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten6_load = ap_const_lv12_900) else "0";
    icmp_ln41_fu_949_p2 <= "1" when (ap_sig_allocacmp_x_load = ap_const_lv6_31) else "0";
    icmp_ln51_fu_1755_p2 <= "1" when (signed(tmp_45_reg_2224) > signed(ap_const_lv4_0)) else "0";
    magnitude_fu_1731_p2 <= std_logic_vector(signed(sext_ln49_fu_1695_p1) + signed(sext_ln49_1_fu_1721_p1));
    mul_ln40_fu_1058_p0 <= mul_ln40_fu_1058_p00(6 - 1 downto 0);
    mul_ln40_fu_1058_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_2_reg_1810_pp0_iter9_reg),13));
    mul_ln40_fu_1058_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln41_fu_1100_p0 <= mul_ln41_fu_1100_p00(6 - 1 downto 0);
    mul_ln41_fu_1100_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_reg_1802_pp0_iter9_reg),13));
    mul_ln41_fu_1100_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln42_fu_1013_p0 <= mul_ln42_fu_1013_p00(6 - 1 downto 0);
    mul_ln42_fu_1013_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_1_fu_975_p3),13));
    mul_ln42_fu_1013_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln45_1_fu_1186_p0 <= mul_ln45_1_fu_1186_p00(6 - 1 downto 0);
    mul_ln45_1_fu_1186_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_1_fu_1120_p2),13));
    mul_ln45_1_fu_1186_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln45_2_fu_1247_p0 <= mul_ln45_2_fu_1247_p00(6 - 1 downto 0);
    mul_ln45_2_fu_1247_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln41_reg_1818_pp0_iter9_reg),13));
    mul_ln45_2_fu_1247_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    mul_ln45_fu_1129_p0 <= mul_ln45_fu_1129_p00(6 - 1 downto 0);
    mul_ln45_fu_1129_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_1_fu_1092_p2),13));
    mul_ln45_fu_1129_p1 <= ap_const_lv13_56(8 - 1 downto 0);
    output_r_address0 <= zext_ln51_2_fu_1751_p1(12 - 1 downto 0);

    output_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_r_d0 <= 
        ap_const_lv8_FF when (icmp_ln51_fu_1755_p2(0) = '1') else 
        trunc_ln51_reg_2229;

    output_r_we0_assign_proc : process(ap_enable_reg_pp0_iter12, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter12 = ap_const_logic_1))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

    px_2_fu_1641_p2 <= std_logic_vector(unsigned(add_ln45_fu_1635_p2) - unsigned(tmp_23_cast6_fu_1515_p1));
    px_fu_1647_p2 <= std_logic_vector(unsigned(px_2_fu_1641_p2) + unsigned(zext_ln45_20_fu_1631_p1));
    py_fu_1663_p2 <= std_logic_vector(unsigned(add_ln46_1_fu_1657_p2) + unsigned(sext_ln45_1_fu_1608_p1));
    select_ln40_1_fu_975_p3 <= 
        add_ln40_2_fu_963_p2 when (icmp_ln41_fu_949_p2(0) = '1') else 
        add_ln4042_fu_969_p2;
    select_ln40_2_fu_983_p3 <= 
        add_ln4042_fu_969_p2 when (icmp_ln41_fu_949_p2(0) = '1') else 
        ap_sig_allocacmp_y_load;
    select_ln40_fu_955_p3 <= 
        ap_const_lv6_1 when (icmp_ln41_fu_949_p2(0) = '1') else 
        ap_sig_allocacmp_x_load;
    select_ln49_1_fu_1713_p3 <= 
        sub_ln49_1_fu_1707_p2 when (tmp_44_fu_1699_p3(0) = '1') else 
        py_fu_1663_p2;
    select_ln49_fu_1687_p3 <= 
        sub_ln49_fu_1681_p2 when (tmp_43_fu_1673_p3(0) = '1') else 
        px_fu_1647_p2;
        sext_ln42_1_fu_1669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(py_fu_1663_p2),32));

        sext_ln42_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln45_fu_1541_p2),11));

        sext_ln45_1_fu_1608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln46_fu_1602_p2),11));

        sext_ln45_fu_1537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_40_fu_1529_p3),11));

        sext_ln46_1_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(px_fu_1647_p2),32));

        sext_ln46_fu_1588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_41_fu_1580_p3),11));

        sext_ln49_1_fu_1721_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln49_1_fu_1713_p3),12));

        sext_ln49_fu_1695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln49_fu_1687_p3),12));

    sub_ln45_fu_1541_p2 <= std_logic_vector(unsigned(zext_ln45_6_fu_1446_p1) - unsigned(zext_ln45_2_fu_1400_p1));
    sub_ln46_fu_1602_p2 <= std_logic_vector(unsigned(tmp_23_cast_fu_1519_p1) - unsigned(zext_ln46_fu_1598_p1));
    sub_ln49_1_fu_1707_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(py_fu_1663_p2));
    sub_ln49_fu_1681_p2 <= std_logic_vector(unsigned(ap_const_lv11_0) - unsigned(px_fu_1647_p2));
    tmp2_fu_1523_p2 <= std_logic_vector(unsigned(zext_ln42_fu_1492_p1) - unsigned(zext_ln45_8_fu_1469_p1));
    tmp_11_fu_1427_p7 <= "XXXXXXXX";
    tmp_15_fu_1450_p7 <= "XXXXXXXX";
    tmp_19_fu_1473_p7 <= "XXXXXXXX";
    tmp_23_cast6_fu_1515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1496_p9),11));
    tmp_23_cast_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1496_p9),10));
    tmp_23_fu_1496_p7 <= "XXXXXXXX";
    tmp_27_cast_fu_1570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_fu_1551_p9),9));
    tmp_27_fu_1551_p7 <= "XXXXXXXX";
    tmp_31_fu_1612_p7 <= "XXXXXXXX";
    tmp_32_fu_1064_p4 <= mul_ln40_fu_1058_p2(12 downto 8);
    tmp_33_fu_1078_p3 <= (tmp_32_fu_1064_p4 & ap_const_lv4_0);
    tmp_34_fu_1106_p4 <= mul_ln41_fu_1100_p2(12 downto 8);
    tmp_35_fu_1135_p4 <= mul_ln45_fu_1129_p2(12 downto 8);
    tmp_36_fu_1149_p3 <= (tmp_35_fu_1135_p4 & ap_const_lv4_0);
    tmp_37_fu_1192_p4 <= mul_ln45_1_fu_1186_p2(12 downto 8);
    tmp_38_fu_1253_p4 <= mul_ln45_2_fu_1247_p2(12 downto 8);
    tmp_39_fu_1308_p3 <= (tmp_42_reg_1823_pp0_iter9_reg & ap_const_lv4_0);
    tmp_40_fu_1529_p3 <= (tmp2_fu_1523_p2 & ap_const_lv1_0);
    tmp_41_fu_1580_p3 <= (tmp_fu_1574_p2 & ap_const_lv1_0);
    tmp_43_fu_1673_p3 <= sext_ln46_1_fu_1653_p1(31 downto 31);
    tmp_44_fu_1699_p3 <= sext_ln42_1_fu_1669_p1(31 downto 31);
    tmp_4_fu_1381_p7 <= "XXXXXXXX";
    tmp_8_fu_1404_p7 <= "XXXXXXXX";
    tmp_fu_1574_p2 <= std_logic_vector(unsigned(tmp_27_cast_fu_1570_p1) - unsigned(zext_ln45_3_fu_1423_p1));
    trunc_ln40_fu_1047_p1 <= grp_fu_991_p2(2 - 1 downto 0);
    trunc_ln41_fu_1051_p1 <= grp_fu_1003_p2(2 - 1 downto 0);
    trunc_ln51_fu_1747_p1 <= add_ln49_fu_1725_p2(8 - 1 downto 0);
    zext_ln41_1_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_fu_1106_p4),9));
    zext_ln42_fu_1492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_19_fu_1473_p9),9));
    zext_ln45_10_fu_1212_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_4_fu_1206_p2),64));
    zext_ln45_11_fu_1231_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_5_fu_1225_p2),64));
    zext_ln45_13_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_1253_p4),9));
    zext_ln45_14_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_6_fu_1267_p2),64));
    zext_ln45_15_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_7_fu_1286_p2),64));
    zext_ln45_16_fu_1305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_42_reg_1823_pp0_iter9_reg),9));
    zext_ln45_17_fu_1327_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_9_fu_1321_p2),64));
    zext_ln45_18_fu_1346_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_10_fu_1340_p2),64));
    zext_ln45_19_fu_1365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_11_fu_1359_p2),64));
    zext_ln45_20_fu_1631_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_fu_1612_p9),11));
    zext_ln45_2_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_1381_p9),9));
    zext_ln45_3_fu_1423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1404_p9),9));
    zext_ln45_4_fu_1145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_fu_1135_p4),9));
    zext_ln45_5_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln45_3_fu_1163_p2),64));
    zext_ln45_6_fu_1446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_11_fu_1427_p9),9));
    zext_ln45_8_fu_1469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_1450_p9),9));
    zext_ln45_9_fu_1202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_37_fu_1192_p4),9));
    zext_ln45_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_fu_1064_p4),9));
    zext_ln46_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln46_fu_1592_p2),10));
    zext_ln51_2_fu_1751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1768_p3),64));
end behav;
